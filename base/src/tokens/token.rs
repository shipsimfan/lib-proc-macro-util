/// Creates a token with span `Span::call_site()`
#[macro_export]
macro_rules! Token {
    [abstract] => { $crate::tokens::Abstract };
    [as] => { $crate::tokens::As };
    [async] => { $crate::tokens::Async };
    [await] => { $crate::tokens::Await };
    [become] => { $crate::tokens::Become };
    [box] => { $crate::tokens::Box };
    [break] => { $crate::tokens::Break };
    [const] => { $crate::tokens::Const };
    [continue] => { $crate::tokens::Continue };
    [crate] => { $crate::tokens::Crate };
    [do] => { $crate::tokens::Do };
    [dyn] => {$crate::tokens::Dyn };
    [else] => { $crate::tokens::Else };
    [enum] => { $crate::tokens::Enum };
    [extern] => { $crate::tokens::Extern };
    [final] => { $crate::tokens::Final };
    [fn] => { $crate::tokens::Fn };
    [for] => { $crate::tokens::For };
    [if] => { $crate::tokens::If };
    [impl] => { $crate::tokens::Impl };
    [in] => { $crate::tokens::In };
    [let] => { $crate::tokens::Let };
    [loop] => { $crate::tokens::Loop };
    [macro] => { $crate::tokens::Macro };
    [match] => { $crate::tokens::Match };
    [mod] => { $crate::tokens::Mod };
    [move] => { $crate::tokens::Move };
    [mut] => { $crate::tokens::Mut };
    [override] => { $crate::tokens::Override };
    [priv] => { $crate::tokens::Priv };
    [pub] => { $crate::tokens::Pub };
    [ref] => { $crate::tokens::Ref };
    [return] => { $crate::tokens::Return };
    [self] => { $crate::tokens::LowerSelf };
    [Self] => { $crate::tokens::UpperSelf };
    [static] => { $crate::tokens::Static };
    [struct] => { $crate::tokens::Struct };
    [super] => { $crate::tokens::Super };
    [trait] => { $crate::tokens::Trait };
    [try] => { $crate::tokens::Try };
    [type] => { $crate::tokens::Type };
    [typeof] => { $crate::tokens::TypeOf };
    [unsafe] => { $crate::tokens::Unsafe };
    [unsized] => { $crate::tokens::Unsized };
    [use] => { $crate::tokens::Use };
    [virtual] => { $crate::tokens::Virtual };
    [where] => { $crate::tokens::Where };
    [while] => { $crate::tokens::While };
    [yield] => { $crate::tokens::Yield };

    [...] => { $crate::tokens::DotDotDot };
    [..=] => { $crate::tokens::DotDotEq };
    [<<=] => { $crate::tokens::ShlEq };
    [>>=] => { $crate::tokens::ShrEq };

    [&&] => { $crate::tokens::AndAnd };
    [&=] => { $crate::tokens::AndEq };
    [^=] => { $crate::tokens::CaretEq };
    [..] => { $crate::tokens::DotDot };
    [==] => { $crate::tokens::EqEq };
    [=>] => { $crate::tokens::FatArrow };
    [>=] => { $crate::tokens::Ge };
    [<-] => { $crate::tokens::LArrow };
    [<=] => { $crate::tokens::Le };
    [-=] => { $crate::tokens::MinusEq };
    [!=] => { $crate::tokens::Ne };
    [|=] => { $crate::tokens::OrEq };
    [||] => { $crate::tokens::OrOr };
    [::] => { $crate::tokens::PathSep };
    [%=] => { $crate::tokens::PercentEq };
    [+=] => { $crate::tokens::PlusEq };
    [->] => { $crate::tokens::RArrow };
    [<<] => { $crate::tokens::Shl };
    [>>] => { $crate::tokens::Shr };
    [/=] => { $crate::tokens::SlashEq };
    [*=] => { $crate::tokens::StarEq };

    [&] => { $crate::tokens::And };
    [@] => { $crate::tokens::At };
    [^] => { $crate::tokens::Caret };
    [:] => { $crate::tokens::Colon };
    [,] => { $crate::tokens::Comma };
    [$] => { $crate::tokens::Dollar };
    [.] => { $crate::tokens::Dot };
    [=] => { $crate::tokens::Eq };
    [>] => { $crate::tokens::Gt };
    [<] => { $crate::tokens::Lt };
    [-] => { $crate::tokens::Minus };
    [!] => { $crate::tokens::Not };
    [|] => { $crate::tokens::Or };
    [%] => { $crate::tokens::Percent };
    [+] => { $crate::tokens::Plus };
    [#] => { $crate::tokens::Pound };
    [?] => { $crate::tokens::Question };
    [;] => { $crate::tokens::Semi };
    [/] => { $crate::tokens::Slash };
    [*] => { $crate::tokens::Star };
    [~] => { $crate::tokens::Tilde };
    [_] => { $crate::tokens::Underscore };
}
